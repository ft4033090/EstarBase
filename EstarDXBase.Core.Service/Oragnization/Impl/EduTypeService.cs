//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
//	   如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类进行实现。
// </auto-generated>
//
//------------------------------------------------------------------------------
using System;
using System.ComponentModel.Composition;
using System.Linq;
using EstarDXBase.Infrastructure.EFData;
using EstarDXBase.Domain.Models.Oragnization;
using EstarDXBase.Core.Service;
using EstarDXBase.Core.Service.Authen;
using EstarDXBase.Core.Repository.Oragnization;
using EstarDXBase.Infrastructure.Tool;
using EstarDXBase.Web.Models.Oragnization.EduType;
namespace EstarDXBase.Core.Service.Oragnization.Impl
{
	/// <summary>
    /// 服务操作层实现 —— EduType
    /// </summary>
    [Export(typeof(IEduTypeService))]
    public class EduTypeService : CoreServiceBase, IEduTypeService
    {
        #region 属性
        [Import]
        public IEduTypeRepository EduTypeRepository { get; set; }

        public  IQueryable<EduType> EduTypes
        {
            get { return EduTypeRepository.Entities; }
        }
        
        #endregion

        #region 公共方法

        public OperationResult Insert(EduTypeModel model)
        {
            var entity = new EduType
            {
                Name = model.Name,
                Description = model.Description,
                OrderSort = model.OrderSort,
                Enabled = model.Enabled,
                CreateId = model.CreateId,
                CreateBy = model.CreateBy,
                CreateTime = DateTime.Now,
                ModifyId = model.ModifyId,
                ModifyBy = model.ModifyBy,
                ModifyTime = DateTime.Now
            };
            EduTypeRepository.Insert(entity);
            return new OperationResult(OperationResultType.Success, "添加成功");
        }

        public OperationResult Update(EduTypeModel model)
        {
            var entity = EduTypes.First(t => t.Id == model.Id);
            entity.Name = model.Name;
            entity.Description = model.Description;
            entity.OrderSort = model.OrderSort;
            entity.Enabled = model.Enabled;
            entity.ModifyId = model.ModifyId;
            entity.ModifyBy = model.ModifyBy;
            entity.ModifyTime = model.ModifyTime;
            EduTypeRepository.Update(entity);
            return new OperationResult(OperationResultType.Success, "更新成功");
        }

        public OperationResult Delete(int Id)
        {
            var model = EduTypes.FirstOrDefault(t => t.Id == Id);
            model.IsDeleted = true;
            EduTypeRepository.Update(model);
            return new OperationResult(OperationResultType.Success, "删除成功");
        }
        #endregion

    }
}
