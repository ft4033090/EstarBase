//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
//	   如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类进行实现。
// </auto-generated>
//
//------------------------------------------------------------------------------

using System;
using System.ComponentModel.Composition;
using System.Linq;
using EstarDXBase.Infrastructure.EFData;
using EstarDXBase.Domain.Models.Oragnization;
using EstarDXBase.Core.Service;
using EstarDXBase.Core.Service.Authen;
using EstarDXBase.Core.Repository.Oragnization;
using EstarDXBase.Infrastructure.Tool;
using EstarDXBase.Web.Models.Oragnization.SystemOragnization;
using EstarDXBase.Web.Common.Enum;

namespace EstarDXBase.Core.Service.Oragnization.Impl
{
	/// <summary>
    /// 服务操作层实现 —— SystemOragnization
    /// </summary>
    [Export(typeof(ISystemOragnizationService))]
    public class SystemOragnizationService : CoreServiceBase, ISystemOragnizationService
    {

        #region 属性
        [Import]
        public IEduTypeRepository EduTypeRepository { get; set; }
        [Import]
        public ISystemOragnizationRepository SystemOragnizaitonRepository { get; set; }
   
        public IQueryable<SystemOragnization> SystemOragnizations
        {
            get { return SystemOragnizaitonRepository.Entities; }
        }

        #endregion


        #region 公共方法
        /// <summary>
        /// 根据性质ID获取层级标示
        /// </summary>
        /// <param name="Key"></param>
        /// <returns></returns>
        private string GetLayerFlag(int EduTypeID) {

            string layerFlag = "";

            switch (EduTypeID)
            {
                case (int)EnumLayerFlag.Sheng:
                    layerFlag = "1";
                    break;
                case (int)EnumLayerFlag.Shi:
                    layerFlag = "2";
                    break;
                case (int)EnumLayerFlag.Qu:
                    layerFlag ="3";
                    break;
                case (int)EnumLayerFlag.Xiao:
                    layerFlag = "4";
                    break;
                default:
                    layerFlag = "4";
                    break;
            }
            return layerFlag;
        }

        public OperationResult Insert(SystemOragnizationModel model)
        {
        
            var entity = new SystemOragnization
            {
                Name = model.Name,
                ParentID = model.ParentId,
                StandardID=model.StandardID,
                LayerFlag = GetLayerFlag(model.EduTypeID),
                Adderss=model.StandardID,
                Contact=model.Contact,
                ContactPost=model.ContactPost,
                ZipCode=model.ZipCode,
                EduTypeID=model.EduTypeID,
                Email=model.Email,
                Phone=model.Phone,
                CreateId = model.CreateId,
                CreateBy = model.CreateBy,
                CreateTime = DateTime.Now,
                ModifyId = model.ModifyId,
                ModifyBy = model.ModifyBy,
                ModifyTime = DateTime.Now,
                OrderSort = model.OrderSort,
                Enabled = model.Enabled,
                IsLocking=model.IsLocking
            };
            SystemOragnizaitonRepository.Insert(entity);
            return new OperationResult(OperationResultType.Success, "添加成功");
        }

        public OperationResult Update(SystemOragnizationModel model)
        {
            var entity = SystemOragnizations.First(t => t.Id == model.Id);
            entity.ParentID = model.ParentId;
            entity.StandardID=model.StandardID;
            entity.LayerFlag = GetLayerFlag(model.EduTypeID);
            entity.Adderss = model.Address;
            entity.Contact = model.Contact;
            entity.ContactPost = model.ContactPost;
            entity.ZipCode = model.ZipCode;
            entity.EduTypeID = model.EduTypeID;
            entity.Email = model.Email;
            entity.Phone = model.Phone;
            entity.IsLocking = model.IsLocking;
            entity.OrderSort = model.OrderSort;
            entity.Enabled = model.Enabled;
            entity.ModifyId = model.ModifyId;
            entity.ModifyBy = model.ModifyBy;
            entity.ModifyTime = model.ModifyTime;
            SystemOragnizaitonRepository.Update(entity);
            return new OperationResult(OperationResultType.Success, "更新成功");
        }

        public OperationResult Delete(int Id)
        {
            var model = SystemOragnizations.FirstOrDefault(t => t.Id == Id);
            model.IsDeleted = true;
            SystemOragnizaitonRepository.Delete(model);
            return new OperationResult(OperationResultType.Success, "删除成功");
        }
        #endregion
    
    }
}
